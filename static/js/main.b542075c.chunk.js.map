{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","squares","reducer","state","action","type","xIsNext","payload","step","history","slice","concat","Game","useReducer","Array","fill","dispatch","length","bestMove","current","winner","calculateWinner","status","moves","map","move","desc","jumpTo","i","click_event","CustomEvent","btn_element","document","querySelector","console","log","dispatchEvent","handleClick","every","elem","bestScore","Infinity","score","minimax","scores","depth","isMaximizing","result","Math","max","min","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b542075c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Square(props){\r\n    return (<button className=\"btn\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>)\r\n}\r\n","import React from 'react'\r\nimport Square from './Square'\r\n\r\nexport default function Board(props){\r\n    return (\r\n        <div className=\"board\">\r\n            <div>\r\n                <Square value={props.squares[0]} onClick={()=>{props.onClick(0)}}/>\r\n                <Square value={props.squares[1]} onClick={()=>{props.onClick(1)}}/>\r\n                <Square value={props.squares[2]} onClick={()=>{props.onClick(2)}}/>\r\n            </div>\r\n            <div>\r\n                <Square value={props.squares[3]} onClick={()=>{props.onClick(3)}}/>\r\n                <Square value={props.squares[4]} onClick={()=>{props.onClick(4)}}/>\r\n                <Square value={props.squares[5]} onClick={()=>{props.onClick(5)}}/>\r\n            </div>\r\n            <div>\r\n                <Square value={props.squares[6]} onClick={()=>{props.onClick(6)}}/>\r\n                <Square value={props.squares[7]} onClick={()=>{props.onClick(7)}}/>\r\n                <Square value={props.squares[8]} onClick={()=>{props.onClick(8)}}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport Board from './Board';\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'JUMP':\r\n            return { ...state, \r\n                    xIsNext: action.payload.step%2 === 0, \r\n                    history: state.history.slice(0, action.payload.step + 1), \r\n                };\r\n        case 'MOVE': \r\n            return {...state, history: state.history.concat({\r\n                squares: action.payload.squares\r\n            }),\r\n            xIsNext: !state.xIsNext,\r\n        };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function Game() {\r\n    \r\n    const [state, dispatch] = useReducer(reducer, {\r\n        xIsNext: true,\r\n        history: [{squares: Array(9).fill(null)}]\r\n    });\r\n\r\n    const { xIsNext, history } = state;\r\n    \r\n    if(xIsNext){\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        let i = bestMove(squares);\r\n        squares[i] = 'X';\r\n            \r\n        dispatch({type:'MOVE', payload: { squares }});\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        dispatch({type: 'JUMP', payload: { step }});\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        \r\n        if(xIsNext){\r\n            let i = bestMove(squares);\r\n            squares[i] = 'X';\r\n            \r\n            let click_event = new CustomEvent('click');\r\n            let btn_element = document.querySelector('.btn');\r\n            console.log(btn_element);\r\n            btn_element.dispatchEvent(click_event);\r\n            \r\n        }else{\r\n            const winner = calculateWinner(squares);\r\n\r\n            if(winner || squares[i]){\r\n                return;\r\n            }\r\n\r\n            squares[i] = 'O';\r\n        }\r\n        dispatch({type:'MOVE', payload: { squares }});\r\n    };\r\n\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const status = winner? winner === 'D' ? 'Draw': 'Winner is ' + winner : \"Next player is \" + (xIsNext?'X' : 'O');\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ? 'Go to #' + move: 'Start the Game';\r\n        return <li key={move}>\r\n            <button onClick={() => jumpTo(move)}>\r\n                {desc}\r\n            </button>\r\n        </li>\r\n    });\r\n\r\n    return <div className={winner?\"game disabled\" : \"game\"}>\r\n        <div className=\"game-board\">\r\n            <Board onClick={(i) => handleClick(i)} squares={current.squares}></Board>\r\n        </div>\r\n        <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ul>{moves}</ul>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    let isDraw = true;\r\n    //verifying rows\r\n    if(squares[0] === squares[1] && squares[1] === squares[2]){\r\n        return squares[0];\r\n    }\r\n    if(squares[3] === squares[4] && squares[4] === squares[5]){\r\n        return squares[3];\r\n    }\r\n    if(squares[6] === squares[7] && squares[7] === squares[8]){\r\n        return squares[6];\r\n    }\r\n\r\n    //verifying columns\r\n    if(squares[0] === squares[3] && squares[3] === squares[6]){\r\n        return squares[0];\r\n    }\r\n    if(squares[1] === squares[4] && squares[4] === squares[7]){\r\n        return squares[1];\r\n    }\r\n    if(squares[2] === squares[5] && squares[5] === squares[8]){\r\n        return squares[2];\r\n    }\r\n\r\n    //verifyin diagonals\r\n    if(squares[0] === squares[4] && squares[4] === squares[8]){\r\n        return squares[0];\r\n    }\r\n    if(squares[2] === squares[4] && squares[4] === squares[6]){\r\n        return squares[2];\r\n    }\r\n\r\n    isDraw = squares.every(elem => elem != null);\r\n        \r\n    if(isDraw) return 'D';\r\n    return null;\r\n}\r\n\r\nfunction bestMove(squares){\r\n    let bestScore = -Infinity;\r\n    let move;\r\n    for(let i = 0; i < 9; i++){\r\n        if(squares[i] === null){\r\n            squares[i]='X';\r\n            let score = minimax(squares, 0, false);\r\n            squares[i] = null;\r\n            if (score > bestScore){\r\n                bestScore = score;\r\n                move = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    return move;\r\n}\r\n\r\nlet scores = {\r\n    'X': 1,\r\n    'O': -1,\r\n    'D': 0\r\n}\r\n\r\nfunction minimax(squares, depth, isMaximizing){\r\n    let result = calculateWinner(squares);\r\n    if(result !== null){\r\n        return scores[result];\r\n    }\r\n\r\n    if(isMaximizing){\r\n        let bestScore = -Infinity;\r\n        for(let i = 0; i < 9; i++){\r\n            if(squares[i] === null){\r\n                squares[i] = 'X';\r\n                let score = minimax(squares, depth + 1, false);\r\n                squares[i] = null;\r\n                bestScore = Math.max(score, bestScore);\r\n            }\r\n        }\r\n        return bestScore;\r\n    }else{\r\n        let bestScore = Infinity;\r\n        for(let i = 0; i < 9; i++){\r\n            if(squares[i] === null){\r\n                squares[i] = 'O';\r\n                let score = minimax(squares, depth + 1, true);\r\n                squares[i] = null;\r\n                bestScore = Math.min(score, bestScore);\r\n            }\r\n        }\r\n        return bestScore;\r\n    }\r\n}","import './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <Game/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}